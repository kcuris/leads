package hr.kiki.leads.entity;
// Generated May 1, 2019 6:00:00 PM by Hibernate Tools 3.2.2.GA


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Car generated by hbm2java
 */
@Entity
@Table(name="car"
    ,schema="leads"
)
public class Car  implements java.io.Serializable {


     private BigDecimal id;
     private String brand;
     private String model;
     private Set<CarProperty> carProperties = new HashSet<CarProperty>(0);
     private Set<Lead> leads = new HashSet<Lead>(0);

    public Car() {
    }

	
    public Car(BigDecimal id) {
        this.id = id;
    }
    public Car(BigDecimal id, String brand, String model, Set<CarProperty> carProperties, Set<Lead> leads) {
       this.id = id;
       this.brand = brand;
       this.model = model;
       this.carProperties = carProperties;
       this.leads = leads;
    }
   
     @Id 
    
    @Column(name="id", unique=true, nullable=false, precision=131089, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }
    
    @Column(name="brand")
    public String getBrand() {
        return this.brand;
    }
    
    public void setBrand(String brand) {
        this.brand = brand;
    }
    
    @Column(name="model")
    public String getModel() {
        return this.model;
    }
    
    public void setModel(String model) {
        this.model = model;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.EAGER, mappedBy="car")
    public Set<CarProperty> getCarProperties() {
        return this.carProperties;
    }
    
    public void setCarProperties(Set<CarProperty> carProperties) {
        this.carProperties = carProperties;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.EAGER)
    @JoinTable(name="lead_car", schema="leads", uniqueConstraints=@UniqueConstraint(columnNames={"lead_id", "car_id"}), joinColumns = { 
        @JoinColumn(name="car_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="lead_id", nullable=false, updatable=false) })
    public Set<Lead> getLeads() {
        return this.leads;
    }
    
    public void setLeads(Set<Lead> leads) {
        this.leads = leads;
    }




}


